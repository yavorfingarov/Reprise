{
  target: {
    requestScopeIdentifier: {
      ScopeId: Guid_1
    },
    Instances: [
      {
        ScopeId: Guid_2,
        Name: MockAsyncEventHandler1,
        HandlerStatus: Done,
        IsDisposed: true
      },
      {
        ScopeId: Guid_2,
        Name: MockAsyncEventHandler2,
        HandlerStatus: Faulted,
        IsDisposed: true
      },
      {
        ScopeId: Guid_2,
        Name: MockSyncEventHandler3,
        HandlerStatus: Faulted,
        IsDisposed: true
      },
      {
        ScopeId: Guid_2,
        Name: MockSyncEventHandler4,
        HandlerStatus: Done,
        IsDisposed: true
      }
    ]
  },
  logs: [
    {
      Error: An exception was thrown while executing Reprise.UnitTests.Features.Events.MockAsyncEventHandler.,
      Category: EventBus,
      State: [
        {
          EventHandlerType: Reprise.UnitTests.Features.Events.MockAsyncEventHandler
        },
        {
          {OriginalFormat}: An exception was thrown while executing {EventHandlerType}.
        }
      ],
      Exception: {
        Type: Exception,
        Message: Test message from MockAsyncEventHandler2
      }
    },
    {
      Error: An exception was thrown while executing Reprise.UnitTests.Features.Events.MockSyncEventHandler.,
      Category: EventBus,
      State: [
        {
          EventHandlerType: Reprise.UnitTests.Features.Events.MockSyncEventHandler
        },
        {
          {OriginalFormat}: An exception was thrown while executing {EventHandlerType}.
        }
      ],
      Exception: {
        Type: Exception,
        Message: Test message from MockSyncEventHandler3
      }
    }
  ]
}