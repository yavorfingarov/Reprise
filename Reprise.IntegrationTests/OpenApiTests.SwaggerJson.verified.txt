{
  Version: 1.1,
  Status: 200 OK,
  Content: {
    Headers: {
      Content-Type: application/json; charset=utf-8
    },
    Value: {
      openapi: 3.0.1,
      info: {
        title: testhost,
        version: 1.0
      },
      paths: {
        /greetings: {
          get: {
            tags: [
              Greetings
            ],
            responses: {
              200: {
                description: Success,
                content: {
                  application/json: {
                    schema: {
                      type: array,
                      items: {
                        type: string
                      }
                    }
                  }
                }
              }
            }
          }
        },
        /token: {
          get: {
            tags: [
              Token
            ],
            responses: {
              200: {
                description: Success,
                content: {
                  application/json: {
                    schema: null
                  }
                }
              }
            }
          }
        },
        /users: {
          post: {
            tags: [
              Users
            ],
            requestBody: {
              content: {
                application/json: {
                  schema: null
                }
              },
              required: true
            },
            responses: {
              200: {
                description: Success
              }
            }
          },
          get: {
            tags: [
              Users
            ],
            responses: {
              200: {
                description: Success,
                content: {
                  application/json: {
                    schema: {
                      type: array,
                      items: null
                    }
                  }
                }
              }
            }
          }
        },
        /users/{id}: {
          delete: {
            tags: [
              Users
            ],
            parameters: [
              {
                name: id,
                in: path,
                required: true,
                schema: {
                  type: integer,
                  format: int32
                }
              }
            ],
            responses: {
              200: {
                description: Success
              }
            }
          },
          get: {
            tags: [
              Users
            ],
            parameters: [
              {
                name: id,
                in: path,
                required: true,
                schema: {
                  type: integer,
                  format: int32
                }
              }
            ],
            responses: {
              200: {
                description: Success
              }
            }
          },
          put: {
            tags: [
              Users
            ],
            parameters: [
              {
                name: id,
                in: path,
                required: true,
                schema: {
                  type: integer,
                  format: int32
                }
              }
            ],
            requestBody: {
              content: {
                application/json: {
                  schema: null
                }
              },
              required: true
            },
            responses: {
              200: {
                description: Success
              }
            }
          }
        },
        /weather: {
          get: {
            tags: [
              Weather
            ],
            responses: {
              200: {
                description: Success,
                content: {
                  application/json: {
                    schema: {
                      type: array,
                      items: null
                    }
                  }
                }
              }
            }
          }
        }
      },
      components: {
        schemas: {
          TokenResponse: {
            type: object,
            properties: {
              type: {
                type: string,
                nullable: true
              },
              token: {
                type: string,
                nullable: true
              }
            },
            additionalProperties: false
          },
          User: {
            type: object,
            properties: {
              id: {
                type: integer,
                format: int32
              },
              firstName: {
                type: string,
                nullable: true
              },
              lastName: {
                type: string,
                nullable: true
              }
            },
            additionalProperties: false
          },
          UserDto: {
            type: object,
            properties: {
              firstName: {
                type: string,
                nullable: true
              },
              lastName: {
                type: string,
                nullable: true
              }
            },
            additionalProperties: false
          },
          WeatherForecast: {
            type: object,
            properties: {
              date: {
                type: string,
                format: date-time
              },
              temperatureC: {
                type: integer,
                format: int32
              },
              summary: {
                type: string,
                nullable: true
              },
              temperatureF: {
                type: integer,
                format: int32,
                readOnly: true
              }
            },
            additionalProperties: false
          }
        }
      }
    }
  },
  Request: http://localhost/swagger/v1/swagger.json
}